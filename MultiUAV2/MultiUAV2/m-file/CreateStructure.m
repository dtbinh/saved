function [NewStructure] = CreateStructure(StructureType)
%CreateStructure - create a new copy of a structure of the given type
%
% This function is used to aggregrate all of the structure creation to make
% it easier to track memory usage
%
%  Inputs:
%    StructureType - desired structure type, see switch statement below
%
%  Outputs:
%    NewStructure - copy of desired structure
%

%  AFRL/VACA
%  March 2000 - Created and Debugged - RAS
%  October 2000 - added AVDS colors - RAS
%  May 2003 - added messages, changed save headings fron 2 to 3 dimensions (added a dimesion for tasks type) - RAS


global g_Debug; if(g_Debug==1),disp('CreateStructure.m');end; 

global g_MaxNumberTargets;
global g_MaxNumberVehicles;
global g_ActiveVehicles;	% used to calculate amount to preallocate memory
global g_ActiveTargets;	% used to calculate amount to preallocate memory
global g_StopTime;	% used to calculate amount to preallocate memory
global g_MaxNumberDesiredHeadings;
global g_CommandTurnRadius;
global g_DefaultWaypointAltitude;
global g_AssignmentTimeDelay;

AllocationsPer100Sec = fix(g_StopTime/100);
if (AllocationsPer100Sec<=0),
    AllocationsPer100Sec = 1;
end;

ColorIntensity = 0.8;
LightGray = [0.8*ColorIntensity,0.8*ColorIntensity,0.8*ColorIntensity];
LightRed = [0.8*ColorIntensity,0.0,0.0];
LightGreen = [0.0,0.8*ColorIntensity,0.0];
LightBlue = [0.0,0.0,0.8*ColorIntensity];
LightYellow = [0.8*ColorIntensity,0.8*ColorIntensity,0.0];
LightMagenta = [0.8*ColorIntensity,0.0,0.8*ColorIntensity];
LightCyan = [0.0,0.8*ColorIntensity,0.8*ColorIntensity];
LightOrange = [1.0*ColorIntensity,0.5*ColorIntensity,0.25*ColorIntensity];
DarkGray = [0.5*ColorIntensity,0.5*ColorIntensity,0.5*ColorIntensity];
DarkRed = [0.5*ColorIntensity,0.0,0.0];
DarkGreen = [0.0,0.5*ColorIntensity,0.0];
DarkBlue = [0.0,0.0,0.5*ColorIntensity];
DarkYellow = [0.5*ColorIntensity,0.5*ColorIntensity,0.0];
DarkMagenta = [0.5*ColorIntensity,0.0,0.5*ColorIntensity];
DarkCyan = [0.0,0.5*ColorIntensity,0.5*ColorIntensity];
DarkOrange = [0.5*ColorIntensity,0.2*ColorIntensity,0.1*ColorIntensity];
Black = [0.0,0.0,0.0];
WhiteDull = [0.9,0.9,0.9];
White = [1.0,1.0,1.0];

ColorsAVDS = [1;(2^8);(2^16);(2^24)];


switch (StructureType),
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
    %%%%%%%%%%%%%%%%%%%%%%%%% Vehicle Memory %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'Vehicle'		% new structure to be used as storage by the vehicle
    NewStructure = struct('VehicleType',1, ...
        'Dynamics',CreateStructure('Dynamics'), ...
        'WeaponsManager',CreateStructure('WeaponsManager'), ...
        'TargetManager',CreateStructure('TargetManager'), ...
        'CooperationManager',CreateStructure('CooperationManager'), ...
        'RouteManager',CreateStructure('RouteManager'), ...
        'SensorManager',CreateStructure('SensorManager'), ...
        'TacticalManeuveringManager',CreateStructure('TacticalManeuveringManager'), ...
        'MonteCarloMetrics',CreateStructure('MonteCarloMetrics'));
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
    %%%%%%%%%%%%%%%%%%%%%%%%% VehicleInit Memory %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'VehicleInit'		% new structure to be used as storage for initalization of the vehicles
    NewStructure = struct('VTrueFPS',470.0,'PsiDeg',0.0, ...
        'PositionXFeet',0.0,'PositionYFeet',0.0,'PositionZFeet',g_DefaultWaypointAltitude, ...
        'NumberBombs',0,'FuelLB',1500.0);
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
    %%%%%%%%%%%%%%%%%%%%%%%%% Vehicle Types  %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'VehicleTypeDefinitions'		% new structure to be used as the constant definition of the vehicle types
    NewStructure =  struct('EntityType',1, ...
        'WeaponType1',1,'WeaponQuantity1',10,'WeaponType2',1,'WeaponQuantity2',10,...
        'SensorType1',1,'SensorType2',1);
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
    %%%%%%%%%%%%%%%%%%%%%%%%% Target Memory %%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
case 'TargetMemory',		% new structure to be used as storage by the target models
    NewStructure =  struct('ID',0,'PositionX',0,'PositionY',0,'PositionZ',0,'Psi',0,'Type',1,'Alive',1,'NumberBombsChecked',0);   
    
case 'TargetMainMemory',		% new structure to be used as storage by the collection of target models
    NewStructure =  struct('BombLog',[]);   
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
    %%%%%%%%%%%%%%%%%%%%%%%%% Target Memory %%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
case 'TargetPostionDefinitions',		% new structure to be used to define the entries in each row of the g_TargetPositions matrix
    NewStructure =  struct('PositionX',1,'PositionY',2,'PositionZ',3,'PositionPsi',4,'PositionType',5);   
    
case 'TargetDistributionData',		% new structure to be used to define the target position distribution properties
    NewStructure =  struct( 'UniformDist', CreateStructure('UniformDist'), ...
        'BivariateNormalDist', CreateStructure('BivariateNormalDist'), ...
        'PoissonDist', CreateStructure('PoissonDist') );
    
case 'UniformDist', % uniform distribution data
    NewStructure =  struct('MinX',0,'MaxX',0,'MinY',0,'MaxY',0);
    
case 'NormalDist', % normal distribution data
    NewStructure = struct('mean', 0, 'sig', 0, 'MaxDraws', 0);
    
case 'BivariateNormalDist', % bivariate normal distribution data
    NewStructure = struct('mean_x',   0, ...
        'mean_y',   0, ...
        'sig_x',    0, ...
        'sig_y',    0, ...
        'rho',      0, ...
        'MaxDraws', 0 );
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%% Vehicle Dynamics Memory %%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'Dynamics'		% new structure to be used as storage by the vehicle dynamics model
    NewStructure = struct('VTrueFPSInit',470.0,'PsiDegInit',0.0,'PositionXFeetInit',0.0, ...
        'PositionYFeetInit',0.0,'PositionZFeetInit',g_DefaultWaypointAltitude,'NumberBombsInit',1.0, ...
        'FuelLB',15000.0);
    
    %NOTE: if the fields in this structure are changed, corresponding changes must be 
    %made in the C++ interface code!!!!
    
    %%%%%%%%%%%%%%%%%%%%%%%%% Embedded Flight Software Memory %%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'WeaponsManager'		% new structure to be used as storage by the weapons managers
    NewStructure =  struct('NumberBombsDropped',0);   
    
case 'TargetManager'		% new structure to be used as storage by the target managers
    NewStructure =  struct('LastCompletedTask',0,'TotalAttacks',zeros(g_MaxNumberTargets,1), ...
        'SensedTargetType',zeros(g_MaxNumberTargets,1),'LastReportedState',zeros(g_MaxNumberTargets,1));   %SensedTargetType added by Dunkel, Oct 2001
    
case 'TacticalManeuveringManager'		% new structure to be used as storage by the tactical maneuvering managers
    NewStructure = [];
    
    
case 'CooperationManager'		% new structure to be used as storage by the cooperation managers
    NewStructure =  struct('AssignmentTimeDelay',g_AssignmentTimeDelay,'WaypointMemory',[],...
        'SavedHeading',1.5707963*ones(g_MaxNumberVehicles,g_MaxNumberTargets,6),'TaskList',[],...
        'TargetSchedule',[],'ReplanRound',[0 0],'LastRoundComplete',[0 0],'AuctionInformation',CreateStructure('AuctionInformation'),...
        'CurrentBenefits',CreateStructure('CurrentBenefits'),'AuctioneerDuty',[],'MessageNumber',0,'PendingWaypoints',[]);		%%!!!!!!!!!!!! THIS ASSUMES THAT THERE ARE A MAXIMUM OF 6 TASKS!!!!!!!
    
    
    
    
case 'MonteCarloMetrics'		% new structure to be used as storage monte carlo metrics
    NewStructure =  struct('TotalSearchTimeSeconds',0,'AliveTimeSeconds',0,'TargetStateTimes',[],'Target1PostionHeading',[],...
        'NumberAuctionCalls',0,'TotalNumberAuctionBids',[], 'RecalculateTrajectory',0,'SaveMultipleTaskDataFlag',0,'LastMultipleTaskSaveTime',0.0,...
        'MultipleTaskSaveCount',0,'MultipleTaskSaveFile',[],'MultipleTaskSaveFileVersion',1,...
        'DirectoryName',['MonteCarloData']);
    
case 'RouteManager'		% new structure to be used as storage by the route managers
    NewStructure =  struct('TargetIDSaved',zeros(g_MaxNumberTargets,1),'PsiSaved',zeros(g_MaxNumberTargets,1), ...
        'g_CommandTurnRadius',g_CommandTurnRadius,'AssignmentTimeDelay',g_AssignmentTimeDelay, ...
        'SaveWaypoints',[], 'UsingOriginalSearchWaypoints',1, ...
        'AlternateWaypoints',[],'AlternateWaypointIndex',0,'OffsetToAlternateIndex',0, ...
        'LastSearchX',0.0,'LastSearchY',0.0,'LastSearchZ',0.0,'LastSearchPsi',0.0,...
        'AssignedTarget',0,'AssignedTask',0);
    
case 'SensorManager'		% new structure to be used as storage by the route managers
    NewStructure =  struct('NumberSightings',zeros(g_MaxNumberTargets,g_MaxNumberVehicles), ...
        'ATRSingleTime',zeros(g_MaxNumberTargets,g_MaxNumberVehicles,g_MaxNumberDesiredHeadings), ...
        'ATRSingleMetric',zeros(g_MaxNumberTargets,g_MaxNumberVehicles,g_MaxNumberDesiredHeadings), ...
        'ATRSingleViewingAngle',zeros(g_MaxNumberTargets,g_MaxNumberVehicles,g_MaxNumberDesiredHeadings), ...
        'ATRSingleEstPose',zeros(g_MaxNumberTargets,g_MaxNumberVehicles,g_MaxNumberDesiredHeadings), ...
        'ATREstTargetType',zeros(g_MaxNumberTargets,g_MaxNumberVehicles,g_MaxNumberDesiredHeadings), ...
        'BDASave',zeros(g_MaxNumberTargets));
    
case 'TaskDefinitions'		% new structure to be used as the constant definition of the Tasks
    NewStructure =  struct('TaskStrings',[], ...
        ... The following definitions are the indicies for the tasks
        'Undefined' , -1, ...
        'ContinueSearching' , 0, ...
        'Classify' , 1, ...
        'Attack' , 2, ...
        'Verify' , 3, ...
        'TasksComplete' , 4, ...	% not really a task , but to differentiate between this and continue to search
        'ClassifyAttack' , 4, ...
        'NumberTasks' , 5, ...
        'NotInPlay',-1, ...	%the following are for use with the task list in the cooperation manager
        'Unassigned',0, ...
        'Assigned',1, ...
        'Completed',2);
    
case 'TargetStateDefinitions'		% new structure to be used as the constant definition of the Tasks
    NumberElements = 100;
    IncState = 1;
    IncAttack = IncState * NumberElements;
    IncReset = IncAttack * NumberElements;
    ColorTargetStates = [Black;LightGray;LightYellow;LightGreen;LightOrange;LightRed;DarkGray;LightBlue];
    [NumberColors]=size(ColorTargetStates,1);
    NewStructure =  struct('StateStrings',[],'IncAttack',100,'IncReset',10000, ...
        ... The following definitions are the indicies for the states
        'StateUndefined' ,-1, ...
        'StateNotDetected' , 0, ...
        'StateDetectedNotClassified' , 1, ...
        'StateClassifiedNotAttacked' , 2, ...
        'StateAttackedNotKilled' , 3, ...		% a target may take more thast one attack to kill it
        'StateKilledNotConfirmed' , 4, ...
        'StateConfirmedKill' , 5, ...
        'StateUnknownTarget' , 6, ...
        'NumberStates',7, ...
        'ColorTargetStates', ColorTargetStates, ...
        'ColorTargetStatesAVDS', fix([ColorTargetStates,ones(NumberColors,1)]*255)*ColorsAVDS);
    
case 'VehicleColorDefinitions'		% new structure to be used as the constant definition of the vehicle colors
    ColorVehicles = ones(g_MaxNumberVehicles,1)*DarkOrange;
    ColorVehicles([1:8],:) = [LightRed;LightGreen;LightBlue;LightYellow;LightMagenta;LightCyan;LightOrange;DarkRed];
    [NumberColors]=size(ColorVehicles,1);
    NewStructure =  struct( 'ColorVehicles',ColorVehicles, ...
        'ColorVehiclesAVDS',fix([ColorVehicles,ones(NumberColors,1)]*255)*ColorsAVDS);
    
case 'ColorDefinitions'		% new structure to be used as the constant definition of the colors for AVDS
    NewStructure =  struct(  'LightGray',LightGray, ...
        'LightRed',LightRed, ...
        'LightGreen',LightGreen, ...
        'LightBlue',LightBlue, ...
        'LightYellow',LightYellow, ...
        'LightMagenta',LightMagenta, ...
        'LightCyan',LightCyan, ...
        'LightOrange',LightOrange, ...
        'DarkGray',DarkGray, ...
        'DarkRed',DarkRed, ...
        'DarkGreen',DarkGreen, ...
        'DarkBlue',DarkBlue, ...
        'DarkYellow',DarkYellow, ...
        'DarkMagenta',DarkMagenta, ...
        'DarkCyan',DarkCyan, ...
        'DarkOrange',DarkOrange, ...
        'Black',Black, ...
        'WhiteDull',WhiteDull, ...
        'White',White, ...
        ... % colors used in AVDS              
        'AVDSLightGray',fix([LightGray,1.0]*255)*ColorsAVDS, ...
        'AVDSLightRed',fix([LightRed,1.0]*255)*ColorsAVDS, ...
        'AVDSLightGreen',fix([LightGreen,1.0]*255)*ColorsAVDS, ...
        'AVDSLightBlue',fix([LightBlue,1.0]*255)*ColorsAVDS, ...
        'AVDSLightYellow',fix([LightYellow,1.0]*255)*ColorsAVDS, ...
        'AVDSLightMagenta',fix([LightMagenta,1.0]*255)*ColorsAVDS, ...
        'AVDSLightCyan',fix([LightCyan,1.0]*255)*ColorsAVDS, ...
        'AVDSLightOrange',fix([LightOrange,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkGray',fix([DarkGray,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkRed',fix([DarkRed,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkGreen',fix([DarkGreen,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkBlue',fix([DarkBlue,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkYellow',fix([DarkYellow,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkMagenta',fix([DarkMagenta,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkCyan',fix([DarkCyan,1.0]*255)*ColorsAVDS, ...
        'AVDSDarkOrange',fix([DarkOrange,1.0]*255)*ColorsAVDS, ...
        'AVDSBlack',fix([Black,1.0]*255)*ColorsAVDS, ...
        'AVDSWhiteDull',fix([WhiteDull,1.0]*255)*ColorsAVDS, ...
        'AVDSWhite',fix([White,1.0]*255)*ColorsAVDS, ...
        'AVDSRed255',fix([1.0,0.0,0.0,0.0]*255)*ColorsAVDS, ...
        'AVDSGreen255',fix([0.0,1.0,0.0,0.0]*255)*ColorsAVDS, ...
        'AVDSBlue255',fix([0.0,0.0,1.0,0.0]*255)*ColorsAVDS, ...
        'AVDSTransparent255',fix([0.0,0.0,0.0,1.0]*255)*ColorsAVDS, ...
        'AVDSRed1',fix([1.0,0.0,0.0,0.0]*1)*ColorsAVDS, ...
        'AVDSGreen1',fix([0.0,1.0,0.0,0.0]*1)*ColorsAVDS, ...
        'AVDSBlue1',fix([0.0,0.0,1.0,0.0]*1)*ColorsAVDS, ...
        'AVDSTransparent1',fix([0.0,0.0,0.0,1])*ColorsAVDS, ...
        'ColorsAVDS',ColorsAVDS);
    
case 'TargetTypeDefinitions'		% new structure to be used as the constant definition of the target types
    global g_TargetLethalRangeMax_default;
    global g_TargetLethalRangeMin_default;
    global g_TargetProbKillMax_default;
    global g_TargetProbKillMin_default;
    NewStructure =  struct('Length',1,'Width',1,'Height',10,'BestViewingHeadingsRad',[0],'IsTarget',0,'TargetValue',0, ...
        'LethalRangeMax',g_TargetLethalRangeMax_default, ...    %maximum kill range (associated with min probability of kill)
        'LethalRangeMin',g_TargetLethalRangeMin_default, ...    %minimum kill range (associated with max probability of kill)
        'ProbKillMax',g_TargetProbKillMax_default, ...
        'ProbKillMin',g_TargetProbKillMin_default ...
    );
    
case 'EntityTypeDefinitions'		% new structure to be used as the constant definition of the entity types for output
    NewStructure =  struct('Aircraft',1,'Munition',2,'Target',3,'NumberEntities',3);
    
case 'WaypointTypeDefinitions'		% new structure to be used as the constant definition of the waypoint types for navigation
    NewStructure =  struct('Search',1,'Enroute',2,'Classify',3,'Attack',4,'Verify',5,'StartPoint',6,'EndPoint',7,'Unknown',8,'EndTask',100,'EndTaskReplan',200,'QualifierMultiple',100);	%NOTE: EndTask is a qualifier that can be used(added) with other type of waypoints
    
case 'WaypointEntryDefinitions'		% new structure to be used as the constant definition of the entrie in the waypoints
    NewStructure =  struct('PositionX',1,'PositionY',2,'PositionZ',3,'MachCommand',4,'MachCommandFlag',5,'SegmentLength',6,'TurnCenterX',7,'TurnCenterY',8,'TurnDirection',9,'WaypointType',10,'TargetHandle',11,'ResetVehiclePosition',12,'NumberEntries',12);
    
case 'AssignmentTypeDefinitions'		% new structure to be used as the constant definition of the assignment algorithm types
    NewStructure =  struct('CapTransShip',1,'AuctionJacobi',2,'ItCapTransShip',3,'ItAuctionJacobi',4,'RelativeBenefits',5,'DistItCapTransShip',6,'DistAuctItCapTransShip',7,'NumberEntries',7);
    
case 'AuctionInformation'    % a structure w/in the CooperationManager vehicle memory
    NewStructure = struct(...  %'VehiclesRound',zeros(1,g_MaxNumberVehicles),...
        'VehiclesTarget',zeros(1,g_MaxNumberVehicles),...
        'TargetPrice',zeros(1,g_MaxNumberVehicles),...
        'AssignmentTime',zeros(1,g_MaxNumberVehicles),...
        'AssignmentETA',zeros(1,g_MaxNumberVehicles),...
        'VehiclesLastBidTarget',zeros(1,g_MaxNumberVehicles),...
        'VehiclesLastBid',zeros(1,g_MaxNumberVehicles),...
        'LastBidTime',zeros(1,g_MaxNumberVehicles),...
        'LastBidETA',zeros(1,g_MaxNumberVehicles),...
        'PreviousRoundVehiclesTarget',zeros(1,g_MaxNumberVehicles),...
        'PreviousRoundTargetPrice',zeros(1,g_MaxNumberVehicles),...
        'PreviousRoundAssignmentTime',zeros(1,g_MaxNumberVehicles),...
        'PreviousRoundAssignmentETA',zeros(1,g_MaxNumberVehicles),...
        'ActiveVehicles',zeros(1,g_MaxNumberVehicles)...
        );
    
case 'CurrentBenefits' 
    NewStructure = struct('TargetStatus',zeros(1,g_MaxNumberTargets),'TaskBenefits',zeros(1,g_MaxNumberTargets),...
        'TimeToComplete',zeros(1,g_MaxNumberTargets),'SearchBenefit',0);
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %        COMMUNICATION IDENTIFICATION
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'ObjectMessageID'
    VehicleIDOffset = fix(0);
    TargetIDOffset = fix(VehicleIDOffset + g_MaxNumberVehicles);
    MiscIDOffset = fix(TargetIDOffset + 1);
    TypeMultiplier = fix(10000);
    NewStructure = struct(...  
        'VehicleIDOffset',fix(VehicleIDOffset),...
        'VehicleIDFirst',fix(VehicleIDOffset+1),...
        'VehicleIDLast',fix(TargetIDOffset),...
        'TargetIDOffset',fix(TargetIDOffset),...
        'TargetIDFirst',fix(TargetIDOffset+1),...
        'TargetIDLast',fix(MiscIDOffset),...
        'MiscIDOffset',fix(MiscIDOffset), ...
        'DataSaveID',fix(MiscIDOffset + 1), ...
        'VehicleEnableID',fix(MiscIDOffset + 2), ...    %this block is at the top of the vehicles blocks. It needs the VehicleKilled flags
        'NumberMessageIDs',fix(MiscIDOffset + 2), ...   %subtract IDs for "all messages" and "all targets"
        ... %type of objects
        'TypeMultiplier',fix(TypeMultiplier), ...
        'VehicleType',fix(1), ... 
        'VehicleTypeShifted',fix(1*TypeMultiplier), ... 
        'TargetType',fix(2), ... 
        'TargetTypeShifted',fix(2*TypeMultiplier), ... 
        'MiscType',fix(3), ... 
        'MiscTypeShifted',fix(3*TypeMultiplier), ... 
        'AllVehiclesType',fix(4), ... 
        'AllVehiclesTypeShifted',fix(4*TypeMultiplier), ... 
        'AllTargetsType',fix(5), ... 
        'AllTargetsTypeShifted',fix(5*TypeMultiplier), ... 
        'NumberTypes',5 ... 
        );
    
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %        COMMUNICATION STORAGE
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'GlobalCommunicationsStorage'		% new structure to be used to store messages that are sent between vehicles
    NewStructure =  struct( ...
        'InBoxes',[], ...
        'Messages',[], ...
        ... 'DelayMatrix',10.0*(~eye(g_MaxNumberVehicles)),...
        'DelayMatrix',zeros(g_MaxNumberVehicles),...		%this matrix represents communication delays between the vehicles in seconds
        'NumberMessages',0, ...
        'MemoryAllocationMetric',[], ...	%keeps track of number of times memory is allocated for each message
        'InBoxAllocationMetric',[], ...	%keeps track of number of times memory is allocated for each inbox
        'MsgIndicies',[], ...	%links message indicies to a name
        'Transport',CreateStructure('MSG_TransportType') ...
        );
    
    %the order of he message in this array determines the order of the outputs in the recieve blocks. It is best to add messages to the end and not changes the order of the others
    NewStructure.Messages = { ...
            CreateStructure('MSG_ETACostToSearch');
            CreateStructure('MSG_PositionID');
            CreateStructure('MSG_WaypointIndex');
            CreateStructure('MSG_TriggerReplan');
            CreateStructure('MSG_ATRSingle');
            CreateStructure('MSG_ATRTime');
            CreateStructure('MSG_TargetStatus');
            CreateStructure('MSG_TargetAttacked');
            CreateStructure('MSG_ChangedStatus'); ...
            CreateStructure('MSG_SendPositionsFlag'); ...
            CreateStructure('MSG_TaskBenefits'); ...
            CreateStructure('MSG_AuctionData') ...
        };
    
    NewStructure.NumberMessages = size(NewStructure.Messages,1);
    for(CountMessages=1:NewStructure.NumberMessages),
        NewStructure.Messages{CountMessages}.ID = CountMessages;
    end;
    NewStructure.MemoryAllocationMetric = zeros(NewStructure.NumberMessages,1);	
    NewStructure.InBoxAllocationMetric = zeros(g_MaxNumberVehicles,1);
    
    for(CountMessage=1:NewStructure.NumberMessages),
        TitleStrings{CountMessage} = NewStructure.Messages{CountMessage}.Title;
    end;
    NewStructure.MsgIndicies = CreateEnumeration(TitleStrings);
    
case 'CommInBox'		%inbox structure
    NewStructure =  struct( ...
        'MessageHeaders',[], ...
        'IndexTimeStamp',[1], ...
        'IndexTimeActivate',[2], ...
        'IndexMessageID',[3], ...
        'IndexMessagePointer',[4], ...
        'IndexMessageEvaluated',[5], ...
        'NumberEntries',(5), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*25*g_ActiveVehicles), ... 	%this parameter is used as the number of message headers to add to the inbox matrix when it needs to be resized
        'TotalNumberMessageHeadersAllocated',0, ...	% this variable keeps track of the total number of message headers allocated (this is not necessarily the total number of valid messages)
        'LastMessageHeaderIndex',0, ... 	%this varible keeps track of the row number of the last valid message headers
        'DefaultMessage',[] ...      % 
        );
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %        MESSAGE DEFINTIONS
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'MSG_ETACostToSearch'		% new message structure
    NewStructure =  struct( ...
        'Title','ETACostToSearch',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexETATimeStamp',[1], ...
        'IndexETA',[2:(1+g_MaxNumberTargets)], ...
        'IndexCost',[(2+g_MaxNumberTargets):(1+2*g_MaxNumberTargets)], ...
        'IndexToSearch',[(2+2*g_MaxNumberTargets):(1+3*g_MaxNumberTargets)], ...
        'NumberEntries',(1+3*g_MaxNumberTargets), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_PositionID'		% new message structure
    NewStructure =  struct( ...
        'Title','PositionID',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'VehicleIDIncluded',[1], ...		%ID of the vehicle that sent the message
        'IndexNorth',[2], ...
        'IndexEast',[3], ...
        'IndexHeading',[4], ...
        'NumberEntries',(4), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*5*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
       );
case 'MSG_WaypointIndex'		% new message structure
    NewStructure =  struct( ...
        'Title','WaypointIndex',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexWaypointIndex',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*5*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_TriggerReplan'		% new message structure
    NewStructure =  struct( ...
        'Title','TriggerReplan',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexTriggerReplan',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'ReplanNoReset',1, ...	%this is the value for TriggerReplan that allows vehicles to replan without recalculating their current first assignments
        'ReplanReset',2, ...		%this is the value for TriggerReplan that forces vehicles to recalculate all assignments
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_ATRSingle'		% new message structure
    NewStructure =  struct( ...
        'Title','ATRSingle',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'ATRTime',[1], ...		
        'IndexSinglATR',[2:(1+g_MaxNumberTargets)], ...
        'IndexSensedHeading',[(2+g_MaxNumberTargets):(1+2*g_MaxNumberTargets)], ...
        'IndexEstimatedPoseAngle',[(2+2*g_MaxNumberTargets):(1+3*g_MaxNumberTargets)], ...
        'IndexEstimatedType',[(2+3*g_MaxNumberTargets):(1+4*g_MaxNumberTargets)], ...
        'NumberEntries',(1+4*g_MaxNumberTargets), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*2*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_ATRTime'		% new message structure
    NewStructure =  struct( ...
        'Title','ATRTime',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
         ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
       ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexATRTime',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*2*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_TargetStatus'		% new message structure
    NewStructure =  struct( ...
        'Title','TargetStatus',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexTargetStatus',[1:g_MaxNumberTargets], ...
        'NumberEntries',(g_MaxNumberTargets), ...
        'SizeToPreAllocate',((AllocationsPer100Sec*4*g_ActiveTargets)*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_TargetAttacked'		% new message structure
    NewStructure =  struct( ...
        'Title','TargetAttacked',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexTargetAttacked',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',(AllocationsPer100Sec*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_ChangedStatus'		% new message structure
    NewStructure =  struct( ...
        'Title','ChangedStatus',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexChangedStatus',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',((AllocationsPer100Sec*4*g_ActiveTargets)*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_SendPositionsFlag'		% new message structure
    NewStructure =  struct( ...
        'Title','SendPositionsFlag',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'IndexSendPositionsFlag',[1], ...
        'NumberEntries',(1), ...
        'SizeToPreAllocate',((AllocationsPer100Sec*4*g_ActiveTargets)*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
case 'MSG_TaskBenefits'		% new message structure
    NewStructure =  struct( ...
        'Title','TaskBenefits',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'ReplanRound',[1 2], ...
        'TargetStates',[3:(2+g_MaxNumberTargets)],...
        'TaskBenefits',[(3+g_MaxNumberTargets):(2+2*g_MaxNumberTargets)],...
        'TimeToComplete',[(3+2*g_MaxNumberTargets):(2+3*g_MaxNumberTargets)],...                        
        'SearchBenefit',[3+3*g_MaxNumberTargets],...
        'NumberEntries',(3+3*g_MaxNumberTargets), ...
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'MSG_AuctionData'		% new message structure
    NewStructure =  struct( ...
        'Title','AuctionData',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'TimeStamp',[1],...
        'ReplanRound',[2 3], ...
        'BidTarget',[4:3+g_MaxNumberVehicles],...
        'BidPrice',[4+g_MaxNumberVehicles:3+2*g_MaxNumberVehicles],...
        'BidTargetETA',[4+2*g_MaxNumberVehicles:3+3*g_MaxNumberVehicles],...
        'AssignedTarget',[4+3*g_MaxNumberVehicles:3+4*g_MaxNumberVehicles],...
        'AssignedPrice',[4+4*g_MaxNumberVehicles:3+5*g_MaxNumberVehicles],...
        'AssignedTargetETA',[4+5*g_MaxNumberVehicles:3+6*g_MaxNumberVehicles],...
        'NumberEntries',(3+6*g_MaxNumberVehicles),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %        SIMULATIOM TRUTH COMMUNICATION STORAGE
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'GlobalTruthStorage'		% new structure to be used to store messages that are sent between vehicles
    NewStructure =  struct( ...
        'InBoxes',[], ...
        'Messages',[], ...
        ... 'DelayMatrix',10.0*(~eye(g_MaxNumberVehicles)),...
        'DelayMatrix',zeros(g_MaxNumberVehicles),...		%this matrix represents communication delays between the vehicles in seconds
        'NumberMessages',0, ...
        'MemoryAllocationMetric',[], ...	%keeps track of number of times memory is allocated for each message
        'InBoxAllocationMetric',[], ...	%keeps track of number of times memory is allocated for each inbox
        'MsgIndicies',[], ...	%links message indicies to a name
        'Transport',CreateStructure('MSG_TransportType') ...
        );
    
    %the order of he message in this array determines the order of the outputs in the recieve blocks. It is best to add messages to the end and not changes the order of the others
    NewStructure.Messages = { ...
            CreateStructure('TRUTH_VehicleState'); ...
            CreateStructure('TRUTH_VehicleIsDead'); ...
            CreateStructure('TRUTH_ChangeVehicleStatus'); ...
            CreateStructure('TRUTH_WeaponsRelease'); ...
            CreateStructure('TRUTH_TargetStatus'); ...
            CreateStructure('TRUTH_TargetState'); ...
            CreateStructure('TRUTH_VehicleStateSaveData'); ...
            CreateStructure('TRUTH_TrackList'); ...
            CreateStructure('TRUTH_ChangeAssignmentFlagSelf') ...
    };
    
    NewStructure.NumberMessages = size(NewStructure.Messages,1);
    for(CountMessages=1:NewStructure.NumberMessages),
        NewStructure.Messages{CountMessages}.ID = CountMessages;
    end;
    NewStructure.MemoryAllocationMetric = zeros(NewStructure.NumberMessages,1);	
    NewStructure.InBoxAllocationMetric = zeros(g_MaxNumberVehicles,1);
    
    for(CountMessage=1:NewStructure.NumberMessages),
        TitleStrings{CountMessage} = NewStructure.Messages{CountMessage}.Title;
    end;
    NewStructure.MsgIndicies = CreateEnumeration(TitleStrings);
    
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %        MESSAGE DEFINTIONS
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
case 'TRUTH_VehicleState'		% new message structure
    NewStructure =  struct( ...
        'Title','VehicleState',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'VehicleLinearPositions',[1 2 3],  ...	%x, y, altitude (feet)
        'VehicleAngularPositions',[4 5 6],  ...	% roll, pitch, yaw (deg) (NOTE: yaw = 90 - heading)
        'VehicleIsDead',[7],  ... % flag: 1 for vehicle dead, 0 for not dead.
        'NumberEntries',(7),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_VehicleIsDead'		% new message structure
    NewStructure =  struct( ...
        'Title','VehicleIsDead',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'VehicleIsDead',[1],  ... % flag: 1 for vehicle dead, 0 for not dead.
        'NumberEntries',(1),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_VehicleStateSaveData'		% new message structure
    NewStructure =  struct( ...
        'Title','VehicleStateSaveData',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'VehicleLinearPositions',[1 2 3],  ...	%x, y, altitude (feet)
        'VehicleAgularPositions',[4 5 6],  ...	% roll, pitch, yaw (deg) (NOTE: yaw = 90 - heading)
        'SensorOn',[7],  ...	% is the sensor on
        'RabbitState',[8 9 10],  ...	% rabbits north/east positions and heading.
        'TargetAssignment',[11],  ...	% next assigned target for this vehicle.
        'VehicleIsDead',[12],  ...	% flag: 1 for vehicle dead, 0 for not dead.
        'NumberEntries',(12),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_ChangeVehicleStatus'		% new message structure
    NewStructure =  struct( ...
        'Title','ChangeVehicleStatus',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberTargets, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'NewVehicleStatus',[1:g_MaxNumberVehicles],  ...	%if a flag is ~ 0.0 then the vehicle has been killed
        'NumberEntries',(g_MaxNumberVehicles),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_WeaponsRelease'		% new message structure
    NewStructure =  struct( ...
        'Title','WeaponsRelease',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'WeaponID',[1],  ...	%
        'WeaponType',[2],...   
        'WeaponAimPoint',[3 4],...     %x, y
        'NumberEntries',(4),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_TargetStatus'		% used to save simulation data
    NewStructure =  struct( ...
        'Title','TargetStatus',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'TargetStatus',[1:g_MaxNumberTargets],  ...	%
        'NumberEntries',(g_MaxNumberTargets),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_TargetState'		%truth state of the targets
    NewStructure =  struct( ...
        'Title','TargetState',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberTargets, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
         ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
       ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'LinearPosition',[1 2 3],  ...	%x, y, altitude (feet)
        'Type',[4],  ...	% roll, pitch, yaw (deg) (NOTE: yaw = 90 - heading)
        'Psi',[5],  ...
        'Alive',[6],  ...
        'NumberEntries',(6),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[ 0;0; ... %VehicleID, TimeStamp
            0.0; 0.0; 0.0; ...      %LinearPosition 
            1; ...      %type
            0; ...      %alive
            0 ...      %psi
        ], ...
        'MessageDelay',0 ...
        );   
    
case 'TRUTH_TrackList'		% new message structure
    NewStructure =  struct( ...
        'Title','TrackList',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'ObjectID',[1:g_MaxNumberTargets],  ...	%if targetid is non-zero then target is being tracked
        'ObjectXYZPsiAlive',[1+g_MaxNumberTargets:(7*g_MaxNumberTargets)],  ...
        'ObjectType',(1+7*g_MaxNumberTargets), ...
        'ObjectMode',(2+7*g_MaxNumberTargets), ...    %is the radar active, etc.
        'NumberEntries',(2+7*g_MaxNumberTargets),... 
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'TRUTH_ChangeAssignmentFlagSelf'		% new message structure
    NewStructure =  struct( ...
        'Title','ChangeAssignmentFlagSelf',...
        'ID',0, ...		%unique ID number for this message type based on index in global structure
        'Enabled',1, ...		%disable(0)/enable(1) this message
        'NumberSenders',g_MaxNumberVehicles, ... % number of objects that will send this type of message
        'Data',{[]}, ...	%storage for all messages of this type
        ... %%%%%%%% Message Storage Enumeration %%%%%%%%%%
        'IndexStorageID',[1], ...
        'IndexStorageTimeStamp',[2], ...
        ... %%%%%%%% Message Content Enumeration %%%%%%%%%%
        'ChangeAssignmentFlagTime',[1],  ...	%contains the time when a new assignment is initiated
        'NumberEntries',(1),...   
        'SizeToPreAllocate',(3*g_ActiveTargets*(g_ActiveTargets+1)/2*g_ActiveVehicles*2), ... 	%this parameter is used as the number of messages to add to the message matrix when it needs to be resized
        'TotalNumberMessagesAllocated',0, ...	% this variable keeps track of the total number of messages allocated (this is not necessarily the total number of valid messages)
        'LastMessageIndex',0, ... 	%this varible keeps track of the row number of the last valid message							);
        'DefaultMessage',[], ...      % 
        'MessageDelay',0 ...
        );
    
case 'MSG_TransportType'		% new message structure
    NewStructure =  struct( ...
        'TransportType',0,...
        'MatlabMatrix',0,...    %transport type enumeration
        'External',1 ...        %i.e. HLA
        );
    
    
    
otherwise,
    NewStructure = [];   
end;	%switch (StructureType),

return 	%CreateStructure


function NewStructure = CreateEnumeration(Strings)

NumberStrings = length(Strings);
StructString = 'struct(';
for(Count=1:NumberStrings),
    StructString = [StructString '''' Strings{Count} '''' ',' num2str(Count)];
    if(Count ~= NumberStrings),
        StructString = [StructString ','];
    end;
end;
StructString = [StructString ');'];

NewStructure = eval(StructString);

return; 	%CreateEnumeration


