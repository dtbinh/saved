//
//	THIS SOFTWARE AND ANY ACCOMPANYING DOCUMENTATION IS RELEASED "AS IS." THE
//	U.S.GOVERNMENT MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, CONCERNING
//	THIS SOFTWARE AND ANY ACCOMPANYING DOCUMENTATION, INCLUDING, WITHOUT LIMITATION,
//	ANY WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT
//	WILL THE U.S. GOVERNMENT BE LIABLE FOR ANY DAMAGES, INCLUDING ANY LOST PROFITS,
//	LOST SAVINGS OR OTHER INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE,
//	OR INABILITY TO USE, THIS SOFTWARE OR ANY ACCOMPANYING DOCUMENTATION, EVEN IF
//	INFORMED IN ADVANCE OF THE POSSIBILITY OF SUCH DAMAGES.
//
//
// CoordVars.h: interface for the CCoordVars class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_COORDVARS_H__CA87F9E4_7006_11D3_99EE_00104B70C01B__INCLUDED_)
#define AFX_COORDVARS_H__CA87F9E4_7006_11D3_99EE_00104B70C01B__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#define VEL_MIN_KTS (300)
//#define VEL_MAX_KTS (370)
#define VEL_MAX_KTS (400)
//#define VEL_MAX_KTS (500)
#define VEL_FPS_MAX (VEL_MAX_KTS * 1.687778)
#define VEL_FPS_MIN (VEL_MIN_KTS * 1.687778)


class CCoordVars  
{
public:
	CCoordVars();
	virtual ~CCoordVars();
public:

    CCoordVars &operator=( CCoordVars & );  // Right side is the argument.

	double m_dPathDistanceFt;
	double m_dVelocityMaxFps;
	double m_dVelocityMinFps;

};

#endif // !defined(AFX_COORDVARS_H__CA87F9E4_7006_11D3_99EE_00104B70C01B__INCLUDED_)
